// Generated by CoffeeScript 1.9.3
(function() {
  require('./helpers');

  describe("Card Component", function() {
    beforeAll(function() {
      var mockModules, moduleUnderTest, ref;
      moduleUnderTest = "../src/index.jsx";
      mockModules = [];
      return ref = mockModule(moduleUnderTest, mockModules), this.Component = ref.Component, ref;
    });
    afterAll(function() {
      return disableMocks();
    });
    Given(function() {
      testdom("<html><body></body></html>");
      return this.model = {
        title: "Bla di Bla",
        meta: {
          curator: "Al Gore",
          followers: 4
        }
      };
    });
    return describe("Without Context", function() {
      Given(function() {
        return this.schema = ["map", "title", "meta"];
      });
      Given(function() {
        return this.children = "Hello World";
      });
      When(function() {
        return this.subject = renderElement(this.Component, {
          schema: this.schema,
          model: this.model,
          children: this.children
        });
      });
      Then(function() {
        return this.classes = this.subject.className.split(' ');
      });
      And(function() {
        return this.classes.includes("card");
      });
      And(function() {
        return this.subject.querySelectorAll('.card_section').length === 3;
      });
      describe("fields with no data", function() {
        When(function() {
          return this.section = this.subject.querySelector('.card_section-map');
        });
        return Then(function() {
          return this.section.textContent = "Hello World";
        });
      });
      describe("Single Level", function() {
        When(function() {
          return this.section = this.subject.querySelector('.card_section-title');
        });
        return Then(function() {
          return this.section.textContent === "Bla di Bla";
        });
      });
      return describe("Nested Levels", function() {
        When(function() {
          return this.section = this.subject.querySelector('.card_section-meta');
        });
        Then(function() {
          return this.section.textContent.includes("Curator: Al Gore");
        });
        return And(function() {
          return this.section.textContent.includes("Followers: 4");
        });
      });
    });
  });

}).call(this);
